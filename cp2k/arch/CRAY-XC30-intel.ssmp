# Author: Alfio Lazzaro (alazzaro@cray.com), CRAY, 2013
# note that MKL FFTW can't be used but that the version from fftw.org is needed for thread safety.
# note that thread_alert.o is needed to avoid problems with thread pinning (intel uses N+1 threads for a N-threaded OMP run).
# Program environments:
# - module load PrgEnv-intel ; module load fftw

CC       = cc
CPP      = 
FC       = ftn
LD       = ftn
AR       = ar -r
CPPFLAGS =
DFLAGS   = -D__INTEL -D__FFTSG -D__FFTW3 -D__HAS_smm_dnn -D__ELPA
CFLAGS   = $(DFLAGS)
FCFLAGS  = $(DFLAGS) -O3 -openmp -pad -opt-prefetch -mavx -vec-report2 -warn -funroll-loops -fpp -free \
           -nogen-interfaces 
LDFLAGS  = $(FCFLAGS) -static /project/cray/alazzaro/intel_affinity_cray/thread_alert.o
MKL_LIB  = ${INTEL_PATH}/mkl/lib/intel64
LIBS     = /project/cray/alazzaro/libsmm/intel_avx/libsmm_dnn.a \
           -lfftw3 -lfftw3_threads \
           -Wl,--start-group \
	   ${MKL_LIB}/libmkl_intel_lp64.a ${MKL_LIB}/libmkl_sequential.a \
	   ${MKL_LIB}/libmkl_core.a -Wl,--end-group

OBJECTS_ARCHITECTURE = machine_intel.o
