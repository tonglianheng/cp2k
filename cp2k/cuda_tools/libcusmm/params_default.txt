# *****************************************************************************
# *  CP2K: A general program to perform molecular dynamics simulations        *
# *  Copyright (C) 2000 - 2013 the CP2K developers group                      *
# *  Authors: Peter Messmer <pmessmer@nvidia.com>,                            *
# *           Nikolay Markovskiy <nmarkovskiy@nvidia.com>                     *
# *****************************************************************************

[                                                                                            # GFlops in Miniapp
#MediumKernel(m=13, n=13, k=13, panel_in=13, panel_out=16, tile_m=2, tile_n=2, threads=96, grouping=16),   # 143
MediumKernel(m=13, n=13, k=26, panel_in=13, panel_out=16, tile_m=2, tile_n=2, threads=96, grouping=16),   # 152
MediumKernel(m=13, n=26, k=13, panel_in=13, panel_out=26, tile_m=2, tile_n=2, threads=128, grouping=16),  # 181
MediumKernel(m=13, n=26, k=26, panel_in=13, panel_out=26, tile_m=2, tile_n=2, threads=128, grouping=16),  # 197
MediumKernel(m=26, n=13, k=13, panel_in=13, panel_out=13, tile_m=2, tile_n=2, threads=128, grouping=16),  # 178
#MediumKernel(m=26, n=13, k=26, panel_in=13, panel_out=13, tile_m=2, tile_n=2, threads=128, grouping=16),  # 198
#MediumKernel(m=26, n=26, k=13, panel_in=13, panel_out=26, tile_m=2, tile_n=2, threads=192, grouping=16),  # 234
#MediumKernel(m=26, n=26, k=26, panel_in=13, panel_out=26, tile_m=2, tile_n=3, threads=192, grouping=16),  # 272
#MediumKernel(m=23, n=23, k=23, panel_in=4,  panel_out=12, tile_m=2, tile_n=3, threads=96, grouping=16),   # 247

MediumDBKernel(m=26, n=26, k=26, panel_in=4, panel_out=26, tile_m=2, tile_n=3, threads=128, grouping=16), # 295
MediumDBKernel(m=23, n=23, k=23, panel_in=4, panel_out=12, tile_m=2, tile_n=3, threads=96, grouping=16),  # 282
MediumDBKernel(m=26, n=13, k=26, panel_in=3, panel_out=13, tile_m=2, tile_n=2, threads=96, grouping=16),  # 206

#SmallKernel(m=23, n=23, k=23, tile_m=1, tile_n=2, threads=288, grouping=16), # 223
SmallKernel(m=26, n=26, k=13, tile_m=2, tile_n=3, threads=192, grouping=16), # 298

SmallKernel(m=13, n=13, k=13, tile_m=2, tile_n=2, threads=96, grouping=16),  # 168
SmallKernel(m=13, n=13, k=5,  tile_m=1, tile_n=2, threads=96, grouping=16),  # 112.8
SmallKernel(m=13, n=5,  k=13, tile_m=1, tile_n=1, threads=96, grouping=16),  # 76
SmallKernel(m=13, n=5,  k=5,  tile_m=1, tile_n=1, threads=96, grouping=16),  # 45
SmallKernel(m=5,  n=13, k=13, tile_m=1, tile_n=1, threads=96, grouping=16),  # 74.9
SmallKernel(m=5,  n=13, k=5,  tile_m=1, tile_n=1, threads=96, grouping=16),  # 46
#SmallKernel(m=5,  n=5,  k=13, tile_m=1, tile_n=1, threads=96, grouping=16),  # 48
#SmallKernel(m=5,  n=5,  k=5,  tile_m=1, tile_n=1, threads=96, grouping=16),  # 23


#TinyKernel(m=13, n=13, k=13, split_thread=192, threads=224, grouping=16),  # 85.6
#TinyKernel(m=13, n=13, k=5,  split_thread=192, threads=224, grouping=16),  # 65.6
#TinyKernel(m=13, n=5,  k=13, split_thread=96,  threads=192, grouping=16),  # 67.9
#TinyKernel(m=13, n=5,  k=5,  split_thread=96,  threads=192, grouping=16),  # 38.4
#TinyKernel(m=5,  n=13, k=13, split_thread=96,  threads=192, grouping=16),  # 66.8
#TinyKernel(m=5,  n=13, k=5,  split_thread=96,  threads=192, grouping=16),  # 38.7
TinyKernel(m=5,  n=5,  k=13, split_thread=32,  threads=128, grouping=16),  # 62.7
TinyKernel(m=5,  n=5,  k=5,  split_thread=32,  threads=64, grouping=16),   # 28.8
]
#EOF
